<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovehao.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="cn.lovehao.entity.Role">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <insert id="insert" parameterType="cn.lovehao.entity.Role">
    insert into role (id, role_name, role_desc, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovehao.entity.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


    <update id="updateByPrimaryKeySelective">
      UPDATE role
      <set>
         <if test="roleName != null and roleName != ''">
              role_name = #{roleName},
         </if>
        <if test="roleDesc != null and roleDesc != ''">
              role_desc = #{roleDesc},
        </if>
        <if test="createUser != null and createUser != ''">
             create_user = #{createUser},
        </if>
        <if test="createTime != null ">
             create_time = #{createTime},
        </if>
        <if test="updateUser != null and updateUser != ''">
          update_user = #{updateUser},
        </if>
        <if test="updateTime != null ">
          update_time = #{updateTime},
        </if>
      </set>
      where id = #{id}
    </update>

  <delete id="deleteByPrimaryKey">
    delete from role where id = #{id}
  </delete>


  <select id="selectRolesByUserName" resultType="cn.lovehao.entity.Role">
      select r.* from role r
         INNER JOIN user_role ur on r.id = ur.role_id
         INNER JOIN user u on u.id = ur.user_id
         where u.username = #{username}
    </select>

  <select id="selectRoleNamesByUsername" resultType="java.lang.String">
      select r.role_name from role r
         INNER JOIN user_role ur on r.id = ur.role_id
         INNER JOIN user u on u.id = ur.user_id
         where u.username = #{username}
  </select>


  <select id="selectByPrimaryKey" resultType="cn.lovehao.entity.Role">
    select * from role where id =  #{id}
  </select>

  <resultMap id="page" type="cn.lovehao.dto.Page" >
     <collection property="data" ofType="cn.lovehao.entity.Role" resultMap="BaseResultMap">
      </collection>
  </resultMap>

  <select id="selectAllRoles" resultMap="page">
     select * from role
     <where>
        <if test="id != null">
            id like concat('%',#{id},'%')
        </if>
       <if test="roleName != null and roleName != ''">
           and role_name like concat('%',#{roleName},'%')
       </if>
       <if test="roleDesc != null and roleDesc != ''">
           and role_desc like concat('%',#{roleDesc},'%')
       </if>
       <if test="createUser">
           and create_user like concat('%',#{createUser},'%')
       </if>
       <if test="createTime">
           and create_time like concat('%',#{createTime},'%')
       </if>
       <if test="updateUser">
           and update_user like concat('%',#{updateUser},'%')
       </if>
       <if test="updateTime">
           and update_time like concat('%',#{updateTime},'%')
       </if>
     </where>
     LIMIT ${(currentPage - 1) * pageShowCount },${pageShowCount}
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select (CEILING(count(*) / ${pageShowCount})) totalPage from role
    <where>
      <if test="id != null">
        id like concat('%',#{id},'%')
      </if>
      <if test="roleName != null and roleName != ''">
        and role_name like concat('%',#{roleName},'%')
      </if>
      <if test="roleDesc != null and roleDesc != ''">
        and role_desc like concat('%',#{roleDesc},'%')
      </if>
      <if test="createUser">
        and create_user like concat('%',#{createUser},'%')
      </if>
      <if test="createTime">
        and create_time like concat('%',#{createTime},'%')
      </if>
      <if test="updateUser">
        and update_user like concat('%',#{updateUser},'%')
      </if>
      <if test="updateTime">
        and update_time like concat('%',#{updateTime},'%')
      </if>
    </where>
  </select>

</mapper>