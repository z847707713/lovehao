<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovehao.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="cn.lovehao.entity.Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="permission_desc" jdbcType="VARCHAR" property="permissionDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, permission, permission_name, permission_desc, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultType="cn.lovehao.entity.Permission">
      select
     <include refid="Base_Column_List" />
     from permission
  </select>

  <select id="selectPermissionsByUsername" resultType="cn.lovehao.entity.Permission">
      select  <include refid="Base_Column_List" />
     from permission p
     INNER JOIN role_permission rp ON rp.permission_id = p.id
     INNER JOIN role r ON rp.role_id = r.id
     INNER JOIN user_role ur ON ur.role_id = r.id
     INNER JOIN user u ON ur.user_id = u.id
     where u.username = #{username}
  </select>

  <select id="selectPermissionsStrByUsername" resultType="java.lang.String">
    select p.permission
    from permission p
    INNER JOIN role_permission rp ON rp.permission_id = p.id
    INNER JOIN role r ON rp.role_id = r.id
    INNER JOIN user_role ur ON ur.role_id = r.id
    INNER JOIN user u ON ur.user_id = u.id
    where u.username = #{username}
  </select>


    <resultMap id="page" type="cn.lovehao.dto.Page">
      <result column="totalPage" jdbcType="INTEGER" property="totalPage" />
      <collection property="data" ofType="cn.lovehao.entity.Permission"
                  resultMap="cn.lovehao.dao.PermissionMapper.BaseResultMap"/>
    </resultMap>

    <select id="selectAllPermission" resultMap="page">
        select
      <include refid="Base_Column_List" />
      from permission
      <where>
          <if test="id != null">
             id = #{id}
          </if>
          <if test="permission != null and permission!= ''">
             and permission like concat('%',#{permission},'%')
          </if>
          <if test="permissionName != null and permissionName != ''">
            and permission_name like concat('%',#{permissionName},'%')
          </if>
          <if test="createTime != null">
            and create_time like  concat('%',#{createTime},'%')
          </if>
          <if test="createUser != null and createUser != ''">
            and create_user like concat('%',#{creatUser},'%')
          </if>
          <if test="updateTime != null ">
            and update_time like concat('%',#{updateTime},'%')
          </if>
          <if test="updateUser != null and updateUser != ''">
            and update_user like concat('%',#{updateUser},'%')
          </if>
      </where>
      LIMIT ${(currentPage - 1) * pageShowCount },${pageShowCount}
    </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select
    (CEILING(count(*) / ${pageShowCount})) totalPage
    from permission
    <where>
      <if test="id != null">
        id = #{id}
      </if>
      <if test="permission != null and permission!= ''">
        and permission like concat('%',#{permission},'%')
      </if>
      <if test="permissionName != null and permissionName != ''">
        and permission_name like concat('%',#{permissionName},'%')
      </if>
      <if test="createTime != null">
        and create_time like  concat('%',#{createTime},'%')
      </if>
      <if test="createUser != null and createUser != ''">
        and create_user like concat('%',#{creatUser},'%')
      </if>
      <if test="updateTime != null ">
        and update_time like concat('%',#{updateTime},'%')
      </if>
      <if test="updateUser != null and updateUser != ''">
        and update_user like concat('%',#{updateUser},'%')
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lovehao.entity.Permission">
    insert into permission (id, permission, permission_name, 
      permission_desc, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR}, #{permissionName,jdbcType=VARCHAR}, 
      #{permissionDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovehao.entity.Permission">
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="permissionName != null">
        permission_name,
      </if>
      <if test="permissionDesc != null">
        permission_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        #{permissionDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lovehao.entity.Permission">
    update permission
    <set>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null">
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        permission_desc = #{permissionDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lovehao.entity.Permission">
    update permission
    set permission = #{permission,jdbcType=VARCHAR},
      permission_name = #{permissionName,jdbcType=VARCHAR},
      permission_desc = #{permissionDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>